<?php

/**
 * @file
 * Installation file for Audiofield module.
 */

/**
 * Implements hook_requirements().
 */
function audiofield_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    $requirements['audiofield'] = [
      'title' => t('AudioField Players'),
      'severity' => REQUIREMENT_INFO,
      'value' => '',
      'description' => [
        'installed' => [
          '#theme' => 'item_list',
          '#items' => [],
          '#title' => '',
          '#list_type' => 'ul',
          '#attributes' => [],
        ],
        'uninstalled' => [
          '#theme' => 'item_list',
          '#items' => [],
          '#title' => '',
          '#list_type' => 'ul',
          '#attributes' => [],
        ],
      ],
    ];

    // Loop over each plugin and make sure it's library is installed.
    foreach (\Drupal::service('plugin.manager.audiofield')->getDefinitions() as $pluginName => $plugin) {
      // Create an instance of this plugin.
      $pluginInstance = \Drupal::service('plugin.manager.audiofield')->createInstance($pluginName);

      // Get the main library for this plugin.
      $library = \Drupal::service('library.discovery')->getLibraryByName('audiofield', 'audiofield.' . $plugin['libraryName']);

      if ($library) {
        $library_location = preg_filter('%(^libraries/[^//]+).*%', '/$1', $library['js'][0]['data']);

        // Check if the plugin is installed.
        if (!$pluginInstance->checkInstalled()) {
          // Show a warning here as something is not installed.
          $requirements['audiofield']['description']['uninstalled']['#prefix'] = t('Unavailable players');
          // Try to print the install directory (will fail if the library itself
          // is broken somehow).
          try {
            $requirements['audiofield']['description']['uninstalled']['#items'][] = t(':library_name library has not been installed. Download from <a href=":url">:url</a> and install in %library', [
              ':library_name' => $pluginInstance->getPluginTitle(),
              ':url' => $pluginInstance->getPluginSource(),
              '%library' => $library_location,
            ]);
          }
          catch (Exception $e) {
            $requirements['audiofield']['description']['uninstalled']['#items'][] = t(':library_name library has not been installed. Download and install in %library', [
              ':library_name' => $pluginInstance->getPluginTitle(),
              '%library' => $library_location,
            ]);
          }
        }
        else {
          $requirements['audiofield']['description']['installed']['#prefix'] = t('Available players');
          $requirements['audiofield']['description']['installed']['#items'][] = t(':library_name library has been successfully installed at %library', [
            ':library_name' => $pluginInstance->getPluginTitle(),
            '%library' => $library_location,
          ]);
        }
      }
    }
  }

  return $requirements;
}
